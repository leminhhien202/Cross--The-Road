#pragma once
#include "INFORMATION.h"

using namespace std;

string ambulance[7] = {
"     ___[]________________________ ",
"   /  _____  |         __         |",
"  /  /     | |      __|  |__      |",
" /  |______| |     |__    __|     |",
"|            |        |__|        |",
"|            |********************|",
" `___[(..)]__|__________[(..)]____|",
};



string HCMUS[14] = {
	"    _____________________________________________________________________________________",
	"   /                                                                                    /|",
	"  /                                                                                    / |",
	" /____________________________________________________________________________________/  |",
	"|      __      ___       _________   ___       __      __    __       _______         |  |",
	"|    /__/ |   /__/ |    /________/| /__/\\    /__/|   /__/|  /__/     /______/ \\       |  |",
	"|    |..| |   |..| |   /  ______|/  |..\\ \\  /..| |  |..| | |..| |   /..____ .\\/|      |  |",
	"|    |..| |___|..| |  |..| |        |...\\ \\/...| |  |..| | |..| |  |..| |  |__|/      |  |",
	"|    |..|/____|..| |  |..| |        |....\\/....| |  |..| | |..| |  |..|/_____/ \\      |  |",
	"|    |   ____    | |  |..| |        |..|\\../|..| |  |..| | |..| |   \\ ______ .\\/|     |  |",
	"|    |..| |   |..| |  |..| |_____   |..| \\/ |..| |  |..| |_|..| |   _   ___ |..||     |  |",
	"|    |..| |   |..| |  |..|/____ /|  |..| |  |..| |  |..\\/__/..|/   |..\\/____|..|/     |  /",
	"|    |__|/    |__|/   \\________|/   |__|/   |__|/    \\________/     \\__________/      | /",
	"|_____________________________________________________________________________________|/",
};


string GROUP[8] = {
" _________   _______      ________   __      __   _______         ___   _______  ",
"|.. ___ ..| |.. ___..\\   /..____..\\ |..|    |..| |.. ___..\\      /...| |_____ ..|",
"|..|   |__| |..|   \\..\\ |..|    |..||..|    |..| |..|   \\..\\    /._..|       |..|",
"|..|        |..|   |..| |..|    |..||..|    |..| |..|    |..|     |..|       |..|",
"|..|  ____  |..|___/../ |..|    |..||..|    |..| |..|___/../      |..|      /../",
"|..| |__  _||.. __..|   |..|    |..||..|    |..| |.. _____/       |..|     /../",
"|..|__/   | |..|  \\..\\  |..\\____/..||..\\____/..| |..|             |..|    |..|",
"|______/|_| |__|   \\__\\  \\________ / \\________/  |__|             |__|    |__|",
};


string Welcome[14] = {
	"                              __                            __      __",
	"                             |**|                          |**\\    /**|",
	"                             |**|               ________   |***\\  /***|",
	"                   ________  |**|	        /**____ **\\  |****\\/****|",
	"                  |** _____| |**|     ________|_ |    |**| |**********|  _________",
	"                  |**|       |**|    /**________||    |**| |**|\\**/|**| |** ______|",
	"                  |**|____ __|__|____|__|_____|__|____|__|_|__|_\\/ |**| |**|",
	" ___	           _|_  ____|                                      | |**| |**|____",
	" \\**\\           /**/ |    |                                      | |__| |** ____| ",
	"  \\**\\    _    /**/**|    |                                      |      |**| ",
	"   \\**\\  /*\\  /**/|**|___ |______________________________________|      |**|______",
	"    \\**\\/***\\/**/ |__________|       |**|________                       |_________|",
	"     \\*********/                     \\___________|",
	"      \\__/ \\__/",

};
string Exit[10] = {
	" _____________________________________________________________________________________________",
	"|     _________   _________  ___    ___  ________       ________ ___     ___ __  __________    |",
	"|    |   ___   | |   ___   ||   \\  /   ||   _____|     |   _____|\\  \\   /  /|  ||___    ___|   |",
	"|    |  |   |__| |  |   |  ||    \\/    ||  |           |  |       \\  \\ /  / |  |    |  |       |",
	"|    |  |        |  |   |  ||  |\\  /|  ||  |____       |  |____    \\  \\  /  |  |    |  |       |",
	"|    |  | ______ |  |___|  ||  | \\/ |  ||   ____|      |   ____|    \\  \\/   |  |    |  |       |",
	"|    |  | |__  _||   ___   ||  |    |  ||  |           |  |        / \\  \\   |  |    |  |       |",
	"|    |  |__/   | |  |   |  ||  |    |  ||  |_____      |  |_____  /  /\\  \\  |  |    |  |       |",
	"|    |______/|_| |__|   |__||__|    |__||________|     |________|/__/  \\__\\ |__|    |__|       |",
	"|______________________________________________________________________________________________|",
};

void in4()
{
	SetColor(10);
	int y = 10;
	for (int i = 0; i < 14; i++)
	{
		gotoXY(33, y);
		for (int j = 0; j < HCMUS[i].size(); j++)
		{
			Sleep(1);
			cout << HCMUS[i][j];
		}
		y++;
	}
	Sleep(2000);
	system("cls");
	SetColor(9);
	y = 8;
	for (int i = 0; i < 8; i++)
	{
		gotoXY(42, y);
		for (int j = 0; j < GROUP[i].size(); j++)
		{
			Sleep(1);
			cout << GROUP[i][j];
		}
		y++;
	}
	SetColor(13);
	gotoXY(65, 20);
	cout << "LE THI MINH HIEN - 20120075";
	gotoXY(64, 21);
	cout << "NGUYEN THI BICH HA - 20120071";
	gotoXY(65, 22);
	cout << "PHAN NGOC SON HA - 20120072";
	gotoXY(65, 23);
	cout << "TEACHER: TRUONG TOAN THINH";

	Sleep(3000);
	
}
void win()
{
	system("cls");
	gotoXY(45, 5);
	cout << "..         ..    .....    ..    ..       ..       ..  ..  ..      ..";
	gotoXY(45, 6);
	cout << "  ..     ..    ..     ..  ..    ..       ..       ..  ..  .. ..   ..";
	gotoXY(45, 7);
	cout << "    ..  ..     ..     ..  ..    ..       ..       ..  ..  ..   .. ..";
	gotoXY(45, 8);
	cout << "      **       **     **  **    **       **   **  **  **  **      **";
	gotoXY(45, 9);
	cout << "      **       **     **  **    **       **   **  **  **  **      **";
	gotoXY(45, 10);
	cout << "      ##       ##     ##  ##    ##       ## ## ## ##  ##  ##      ##";
	gotoXY(45, 11);
	cout << "      ##         #####      ####           ##    ##   ##  ##      ##";
	
}
void lose()
{
	system("cls");
	gotoXY(45, 5);
	cout << "..         ..   ....     ..    ..        ..        .....      ......   ........";
	gotoXY(45, 6);
	cout << "  ..    ..    ..     ..  ..    ..        ..      ..     ..  ..      .  ..";
	gotoXY(45, 7); 
	cout << "    .. ..     ..     ..  ..    ..        ..      ..     ..  ..         .. ";
	gotoXY(45, 8);
	cout << "      **      **     **  **    **        **      **     **  *********  ****";
	gotoXY(45, 9);
	cout << "      **      **     **  **    **        **      **     **         **  **";
	gotoXY(45, 10);
	cout << "      ##      ##     ##  ##    ##        ##      ##     ##  #      ##  ##";
	gotoXY(45, 11);
	cout << "      ##        #####      ####          #######   #####     #######   ########";
}
void DrawAmbulance(int x, int y)
{

	
	SetColor(4); //tô màu cho xe
	for (int i = 0; i < 7; i++) {
		gotoXY(x, y);
		for (int j = 0; j < ambulance[i].size(); j++)
			cout << ambulance[i][j];
		cout << endl;
		y++;
	}
	

	

}
void EraseAmbulance(int x, int y)
{
	for (int i = 0; i < 7; i++) {
		gotoXY(x, y);
		for (int j = 0; j < ambulance[i].size(); j++)
			cout << " ";
		cout << endl;
		y++;
	}
	y++;
}
void dead()
{
	system("cls");
	SetColor(11);
	gotoXY(50,10);
	cout << "                 /\\                               ***   ***";
	gotoXY(50, 11);
	cout << "          /\\    /  \\        /\\                   ***** ***** ";
	gotoXY(50, 12);
	cout << "  _____/\\/  \\  /    \\    __/  \\/\\___________      *********";
	gotoXY(50, 13);
	cout << "             \\/      \\  /                           ******";
	gotoXY(50, 14);
	cout << "                      \\/                              ** ";
	for (int i = 140; i >= 10; i--)
	{
		DrawAmbulance(i, 20);
		Sleep(30);
		EraseAmbulance(i, 20);
	}
	lose();
}
void WELCOME()
{
	Sleep(1000);
	int x = 34, y = 8;
	SetColor(11); 
	for (int i = 0; i < 14; i++) {
		gotoXY(x, y);
		for (int j = 0; j < Welcome[i].size(); j++)
		{
			cout << Welcome[i][j];
		}
		cout << endl;
		y++;
	}

}
void EXIT()
{
	int x = 30, y = 10;
	SetColor(11);
	for (int i = 0; i < 10; i++) {
		gotoXY(x, y);
		for (int j = 0; j < Exit[i].size(); j++)
		{
			cout << Exit[i][j];
		}
		cout << endl;
		y++;
	}
	SetColor(0);
}
string rule[5] = {
	" _______     _______    __    __   ______     ______   __    __   __      ______",
	"|  _____|   /   __  \\  |  \\  /  | |  |        | |   \\ |  |  |  | |  |    |  |",
	"|  |  _____ |  |__|  | |   \\/   | |  |___     | |___/ |  |  |  | |  |    |  |___",
	"|  |__ | |  |   __   | |  |\\/|  | |  |        | | \\   |  |__|  | |  |__  |  |",
	"|________|  |__|  |__| |__|  |__| |__|___     |_|  \\  |________| |_____| |__|___",
};
void law()
{
	int x = 40, y = 5;
	SetColor(14);
	for (int i = 0; i < 10; i++) {
		gotoXY(x, y);
		for (int j = 0; j < rule[i].size(); j++)
		{
			cout << rule[i][j];
		}
		cout << endl;
		y++;
	}
	SetColor(10);
	cout << "\n\t\t\t\t\t\tTHE GAME HAS 6 LEVEL TO PLAY, EACH LEVEL GIVE YOU 100 SCORE.";
	cout << "\n\t\t\t\t\t\tUSE W TO MOVE UP, S TO MOVE DOWN, A TO MOVE LEFT, D TO MOVE RIGHT.";
	cout << "\n\t\t\t\t\t\tIF YOU HIT THE CAR OR YOU TOUCH THE DOG BEFORE, YOU LOSE.";
	cout << "\n\t\t\t\t\t\tIF YOU FINISH LEVEL 6 OF THE GAME, YOU WIN.";
}


